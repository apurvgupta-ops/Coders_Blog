import { getArticles, getCategories } from "@/Http";
import { AxiosResponse } from "axios";
import { IArticle, ICategory, ICollectionResponse, IPagination } from "@/Types";
import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import CategoriesTabs from "@/Components/CategoriesTabs";
import Articles from "@/Components/Articles";
import qs from "qs";
import Pagination from "@/Components/Pagination";

interface IPropTypes {
  categories: {
    items: ICategory[];
  };
  articles: {
    items: IArticle[];
    pagination: IPagination;
  };
}

const Home: NextPage<IPropTypes> = ({ categories, articles }) => {
  const { page, pageCount } = articles.pagination;
  return (
    <>
      <Head>
        <title>Coders Blog HomePage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Categories */}
      <CategoriesTabs categories={categories.items} />

      {/* Articles */}
      <Articles articles={articles.items} />

      {/* Pagination */}
      <Pagination page={page} pageCount={pageCount} />
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  //Options
  const options = {
    populate: ["author.avatar"],
    sort: ["id:desc"],
  };
  const queryString = qs.stringify(options);

  //Article
  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await getArticles(queryString);
  // console.log("String", JSON.stringify(articles));

  //Categories
  const { data: categories }: AxiosResponse<ICollectionResponse<ICategory[]>> =
    await getCategories();

  // console.log(categories);
  return {
    props: {
      categories: {
        items: categories.data,
      },

      articles: {
        items: articles.data,
        pagination: articles.meta.pagination,
      },
    },
  };
};

export default Home;
